name: "CodeQL"

on:
  push:
    branches: [ "main", "reordering" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "48 14 * * 6"

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ python, cpp ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Packages (cpp)
        if: ${{ matrix.language == 'cpp' }}
        run: |
          sudo apt-get update
          sudo apt-get install --yes python3-pip

      - name: Install Dependencies (python)
        if: ${{ matrix.language == 'python' }}
        run: pip3 install qiskit-terra

      - name: Configure (cpp)
        if: ${{ matrix.language == 'cpp' }}
        run: cmake -S . -B build -DBUILD_DDSIM_TESTS=ON -DBUILD_QFR_TESTS=ON -DBUILD_DD_PACKAGE_TESTS=ON -DBINDINGS=ON

      - name: After Prepare (cpp)
        if: ${{ matrix.language == 'cpp' }}
        run: |
          export PATH=~/.local/bin:$PATH && echo "PATH=$PATH" >> $GITHUB_ENV
          pip3 install cmake --user
          cmake --version

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
        if: ${{ matrix.language == 'python' }}

      - name: Build cpp
        if: ${{ matrix.language == 'cpp' }}
        run: cmake --build build --parallel 2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{ matrix.language }}"
